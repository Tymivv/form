{"version":3,"sources":["components/Checkbox/Checkbox.jsx","components/App/App.jsx","index.js"],"names":["Checkbox","LabelName","handleChange","checkboxValue","checkboxName","check","type","name","value","onChange","INITIAL_STATE","header","description","checkboxOnOff","phone","email","checkboxServise1","checkboxServise2","checkboxServise3","checkboxServise4","checkboxServise5","App","useState","file","setFile","numberFiles","setnumberFiles","formData","setFormData","currentStep","setСurrentStep","e","target","checked","isCheckbox","toDownloadFiles","event","size","files","length","_next","isSubmitBtnDisabled","some","isSubmitBtnDisabledPhone","onSubmit","alert","for","required","id","onClick","color","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.646356d5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Checkbox = ({LabelName, handleChange, checkboxValue, checkboxName}) => {\r\n\r\n\r\n  return (\r\n    <FormGroup check>\r\n      <Input type=\"checkbox\"\r\n      name={checkboxName}\r\n      value={checkboxValue}\r\n      onChange={handleChange}\r\n      />\r\n    {' '}\r\n    <Label check>\r\n        {LabelName}\r\n    </Label>\r\n  </FormGroup>\r\n  );\r\n\r\n  // eslint-disable-next-line no-unreachable\r\n  Checkbox.propTypes = {\r\n    LabelNamed: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n    checkboxValue: PropTypes.string,\r\n    checkboxName: PropTypes.string,\r\n    \r\n};\r\n}\r\nexport default Checkbox;","import { useState } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport Checkbox from '../Checkbox/Checkbox'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst INITIAL_STATE = {\r\n  header: '',\r\n  description: '',\r\n  checkboxOnOff: false,\r\n  phone: '',\r\n  email: '',\r\n  checkboxServise1: false, \r\n  checkboxServise2: false,\r\n  checkboxServise3: false,\r\n  checkboxServise4: false,\r\n  checkboxServise5: false,\r\n};\r\n\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState([]);\r\n  const [numberFiles, setnumberFiles] = useState(1);\r\n  const [formData, setFormData] = useState({ ...INITIAL_STATE });\r\n  const [currentStep, setСurrentStep] = useState(1);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    setFormData({\r\n      ...formData,\r\n      [name]: isCheckbox ? checked : value,\r\n      file,\r\n    });\r\n  };\r\n\r\n  const toDownloadFiles = (event) => {\r\n    for (let size = 0; size < event.target.files.length; size++) {\r\n      setFile([...file, event.target.files[size]])\r\n    }\r\n}\r\n\r\n  const handleSubmit = event => {\r\n    setFormData({\r\n      ...formData,\r\n      file,\r\n    });\r\n    alert(`Введенные данные: \\nЗаголовок : ${header} \\nОписание : ${description} \\nСтатус : ${checkboxOnOff} \\nНомер телефона : ${phone} \\nЕмайл : ${email} \\nУслуга1 : ${checkboxServise1} \\nУслуга2 : ${checkboxServise2}  \\nУслуга3 : ${checkboxServise3} \\nУслуга4 : ${checkboxServise4} \\nУслуга5 : ${checkboxServise5}`)\r\n    setFormData({ ...INITIAL_STATE });\r\n  }\r\n\r\n  const _next = () => {\r\n    setСurrentStep (currentStep + 1)\r\n  }\r\n\r\n  const _prev = () => {\r\n  setСurrentStep (currentStep - 1)\r\n  }\r\n\r\n  const byNumberFiles = () => {\r\n  setnumberFiles (numberFiles + 1)\r\n  }\r\n\r\n  const { header,\r\n  description,\r\n  checkboxOnOff,\r\n  phone,\r\n  email,\r\n  checkboxServise1, \r\n  checkboxServise2,\r\n  checkboxServise3,\r\n  checkboxServise4,\r\n  checkboxServise5 } = formData;\r\n  \r\n  const requiredHeaderValues = [header];\r\n  const isSubmitBtnDisabled = requiredHeaderValues.some(value => !value);\r\n  const requiredPhoneValues = [phone];\r\n  const isSubmitBtnDisabledPhone = requiredPhoneValues.some(value => !value);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Форма входа</h1>\r\n      <p>Шаг {currentStep} </p> \r\n      <Form onSubmit={handleSubmit}>\r\n        {currentStep === 1 && (\r\n          <>\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">\r\n            Заголовок\r\n          </Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"header\"\r\n            required\r\n            value={header}\r\n            onChange={handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"exampleText\">\r\n            Описание\r\n          </Label>\r\n          <Input\r\n            id=\"exampleText\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={handleChange}\r\n            type=\"textarea\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Input\r\n            type=\"checkbox\"\r\n            name=\"checkboxOnOff\"\r\n            value={checkboxOnOff}\r\n            onChange={handleChange}\r\n            />\r\n          {' '}\r\n          <Label check>\r\n            on|off\r\n          </Label>\r\n            </FormGroup>\r\n            </>\r\n        )}\r\n        {currentStep === 2 && (\r\n          <>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">\r\n                Номер телефона\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                required\r\n                value={phone}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">\r\n                Емайл   \r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n          </>\r\n        )}\r\n        {currentStep === 3 && (\r\n          <>\r\n            <FormGroup>\r\n              <Label for=\"exampleFile\">\r\n                Фотография\r\n              </Label>\r\n              {numberFiles >= 1 && (\r\n                <Input\r\n                  id=\"exampleFile\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={toDownloadFiles}\r\n                />)}\r\n              {numberFiles >= 2 && (\r\n                <Input\r\n                  id=\"exampleFile\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={toDownloadFiles}\r\n                />)}\r\n              {numberFiles >= 3 && (\r\n                <Input\r\n                  id=\"exampleFile\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={toDownloadFiles}\r\n                />)}\r\n              {numberFiles >= 4 && (\r\n                <Input\r\n                  id=\"exampleFile\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={toDownloadFiles}\r\n                />)}\r\n              {numberFiles === 5 && (\r\n                <Input\r\n                  id=\"exampleFile\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={toDownloadFiles}\r\n                />)}\r\n              {numberFiles < 5 && (\r\n                <Button\r\n                  onClick={byNumberFiles}\r\n                  color=\"primary\"\r\n                >\r\n                  Загрузить ещо один файл\r\n                </Button>\r\n              )}\r\n            </FormGroup>\r\n          </>\r\n        )}\r\n        {currentStep === 4 && (\r\n          <>\r\n            <Checkbox\r\n              LabelName=\"послуга1\"\r\n              handleChange = {handleChange}\r\n              checkboxValue={checkboxServise1}\r\n              checkboxName = \"checkboxServise1\"\r\n            />\r\n            <Checkbox\r\n              LabelName=\"послуга2\"\r\n              handleChange = {handleChange}\r\n              checkboxValue={checkboxServise2}\r\n              checkboxName = \"checkboxServise2\"\r\n            />\r\n            <Checkbox\r\n              LabelName=\"послуга3\"\r\n              handleChange = {handleChange}\r\n              checkboxValue={checkboxServise3}\r\n              checkboxName = \"checkboxServise3\"\r\n            />\r\n            <Checkbox\r\n              LabelName=\"послуга4\"\r\n              handleChange = {handleChange}\r\n              checkboxValue={checkboxServise4}\r\n              checkboxName = \"checkboxServise4\"\r\n            />\r\n            <Checkbox\r\n              LabelName=\"послуга5\"\r\n              handleChange = {handleChange}\r\n              checkboxValue={checkboxServise5}\r\n              checkboxName = \"checkboxServise5\"\r\n            />\r\n          </>\r\n        )}\r\n        {currentStep === 1  && (\r\n          <Button\r\n            onClick={_next}\r\n            color=\"primary\"\r\n            disabled = {isSubmitBtnDisabled}\r\n          >\r\n            next\r\n          </Button>\r\n        )}\r\n        {(currentStep === 2 || currentStep === 3)  && (\r\n          <Button\r\n            onClick={_next}\r\n            color=\"primary\"\r\n            disabled = {isSubmitBtnDisabledPhone}\r\n          >\r\n            next\r\n          </Button>\r\n        )}\r\n        {currentStep !== 1 && (\r\n          <Button\r\n            onClick={_prev}\r\n            color=\"danger\"\r\n          >\r\n            prev\r\n          </Button>\r\n        )}\r\n        {currentStep === 4 && (\r\n          <Button\r\n            color=\"danger\"\r\n          >\r\n            save\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n    <App />\n    {/* </PersistGate> */}\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}